"use strict";(self.webpackChunkcode=self.webpackChunkcode||[]).push([[8521],{5470:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"pick-2024/kubernetes/day4/index","title":"Day 4","description":"Sum\xe1rio","source":"@site/docs/cursos/pick-2024/kubernetes/day4/index.md","sourceDirName":"pick-2024/kubernetes/day4","slug":"/pick-2024/kubernetes/day4/","permalink":"/cursos/pick-2024/kubernetes/day4/","draft":false,"unlisted":false,"editUrl":"https://github.com/lucasbaccan/code/tree/master/docs/cursos/pick-2024/kubernetes/day4/index.md","tags":[],"version":"current","lastUpdatedBy":"Lucas Elias Baccan","lastUpdatedAt":1744685485000,"frontMatter":{"id":"index","title":"Day 4","hide_title":false,"hide_table_of_contents":false,"sidebar_label":"Day 4"},"sidebar":"docs","previous":{"title":"Day 3","permalink":"/cursos/pick-2024/kubernetes/day3/"},"next":{"title":"Day 5","permalink":"/cursos/pick-2024/kubernetes/day5/"}}');var r=a(4848),i=a(8453);a(4243);const s={id:"index",title:"Day 4",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"Day 4"},t=void 0,l={},c=[{value:"Sum\xe1rio",id:"sum\xe1rio",level:2},{value:"Dia 4",id:"dia-4",level:2},{value:"O que \xe9 um ReplicaSet?",id:"o-que-\xe9-um-replicaset",level:3},{value:"O Deployment e o ReplicaSet",id:"o-deployment-e-o-replicaset",level:3},{value:"Criando o nosso ReplicaSet",id:"criando-o-nosso-replicaset",level:3},{value:"O que \xe9 um DaemonSet?",id:"o-que-\xe9-um-daemonset",level:3},{value:"Porque n\xe3o usamos o kubectl create agora",id:"porque-n\xe3o-usamos-o-kubectl-create-agora",level:3},{value:"O que s\xe3o as Probes no Kubernetes?",id:"o-que-s\xe3o-as-probes-no-kubernetes",level:3},{value:"Liveness Probe",id:"liveness-probe",level:3},{value:"Readiness Probe",id:"readiness-probe",level:3},{value:"StartUp Probe",id:"startup-probe",level:3},{value:"Exemplo com todas as Probes",id:"exemplo-com-todas-as-probes",level:3},{value:"Desafio",id:"desafio",level:2},{value:"Objetivos",id:"objetivos",level:3},{value:"Solu\xe7\xe3o",id:"solu\xe7\xe3o",level:3}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"sum\xe1rio",children:"Sum\xe1rio"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Intro Day-4 - 02:28"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 O que iremos ver hoje?"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 O que \xe9 um ReplicaSet? - 06:49"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 ReplicaSet"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 O Deployment e o ReplicaSet - 13:03"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 O Deployment e o ReplicaSet"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Criando o nosso ReplicaSet - 14:01"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 Criando o nosso ReplicaSet"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 O que \xe9 um DaemonSet? - 04:45"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 DaemonSet"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Criando o nosso DaemonSet - 22:42"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 Criando um DaemonSet"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Porque n\xe3o usamos o kubectl create agora - 02:22"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 O que s\xe3o as Probes no Kubernetes? - 05:56"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 As Probes do Kubernetes"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Liveness Probe - 12:53"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 Liveness Probe"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Readiness Probe - 12:27"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 Readiness Probe"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 StartUp Probe - 13:26"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 StartUp Probe"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 Exemplo com todas as Probes"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Encerramento Day-4 - 02:30"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Legenda"}),(0,r.jsx)(n.br,{}),"\n","\ud83c\udfa5 - Aula gravada\n\ud83d\udcd6 - Material complementar\n\ud83d\udcdd - Atividade"]}),"\n",(0,r.jsx)(n.h2,{id:"dia-4",children:"Dia 4"}),"\n",(0,r.jsx)(n.p,{children:"No dia 4, voc\xea aprender\xe1 sobre ReplicaSet, DaemonSet e Probes. Voc\xea aprender\xe1 a criar, gerenciar e monitorar ReplicaSets e DaemonSets, al\xe9m de aprender a configurar Probes para garantir a sa\xfade dos seus containers."}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Material complementar: ",(0,r.jsx)(n.a,{href:"https://livro.descomplicandokubernetes.com.br/pt/day-4/",children:"Leitura complementar do Day-4"})]})}),"\n",(0,r.jsx)(n.h3,{id:"o-que-\xe9-um-replicaset",children:"O que \xe9 um ReplicaSet?"}),"\n",(0,r.jsx)(n.p,{children:"O ReplicaSet \xe9 um recurso do Kubernetes que \xe9 respons\xe1vel por garantir que um conjunto de pods esteja sempre em execu\xe7\xe3o e dispon\xedvel para os usu\xe1rios. Ele \xe9 respons\xe1vel por garantir que o n\xfamero de r\xe9plicas de um pod esteja sempre de acordo com o desejado."}),"\n",(0,r.jsx)(n.h3,{id:"o-deployment-e-o-replicaset",children:"O Deployment e o ReplicaSet"}),"\n",(0,r.jsx)(n.p,{children:"O Deployment \xe9 um recurso do Kubernetes que \xe9 respons\xe1vel por gerenciar a implanta\xe7\xe3o de aplica\xe7\xf5es. Ele \xe9 respons\xe1vel por garantir que um conjunto de pods esteja sempre em execu\xe7\xe3o e dispon\xedvel para os usu\xe1rios. O Deployment utiliza o ReplicaSet para garantir que o n\xfamero de r\xe9plicas de um pod esteja sempre de acordo com o desejado."}),"\n",(0,r.jsx)(n.h3,{id:"criando-o-nosso-replicaset",children:"Criando o nosso ReplicaSet"}),"\n",(0,r.jsx)(n.p,{children:"Para criar um ReplicaSet, voc\xea precisa criar um arquivo YAML com a defini\xe7\xe3o do ReplicaSet e aplicar o arquivo YAML no cluster."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="nginx-replicaset.yaml"',children:'apiVersion: apps/v1\nkind: ReplicaSet\nmetadata:\n  labels:\n    app: nginx-replicaset\n  name: nginx-replicaset\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx-replicaset\n  template:\n    metadata:\n      labels:\n        app: nginx-replicaset\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:latest\n          resources:\n            limits:\n              memory: "128Mi"\n              cpu: "500m"\n            requests:\n              memory: "64Mi"\n              cpu: "250m"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Mas n\xe3o \xe9 recomendado criar ReplicaSets diretamente, pois o Deployment \xe9 uma abstra\xe7\xe3o mais poderosa e flex\xedvel que o ReplicaSet."}),"\n",(0,r.jsx)(n.p,{children:"Se voc\xea alterar alguma propriedade do ReplicaSet e aplicar o arquivo YAML, os pods n\xe3o ser\xe3o atualizados. Para atualizar os pods, voc\xea precisa excluir o ReplicaSet e criar um novo."}),"\n",(0,r.jsx)(n.h3,{id:"o-que-\xe9-um-daemonset",children:"O que \xe9 um DaemonSet?"}),"\n",(0,r.jsx)(n.p,{children:"O DaemonSet \xe9 um recurso do Kubernetes que \xe9 respons\xe1vel por garantir que um pod esteja em execu\xe7\xe3o em todos os n\xf3s do cluster. Por exemplo, voc\xea pode utilizar um DaemonSet para garantir que um pod de monitoramento esteja em execu\xe7\xe3o em todos os n\xf3s do cluster."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="nginx-daemonset.yaml"',children:'apiVersion: apps/v1\nkind: DaemonSet\nmetadata:\n  labels:\n    app: nginx-daemonset\n  name: nginx-daemonset\nspec:\n  selector:\n    matchLabels:\n      app: nginx-daemonset\n  template:\n    metadata:\n      labels:\n        app: nginx-daemonset\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:latest\n          resources:\n            limits:\n              memory: "128Mi"\n              cpu: "500m"\n            requests:\n              memory: "64Mi"\n              cpu: "250m"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Se voc\xea alterar alguma propriedade do DaemonSet e aplicar o arquivo YAML, os pods v\xe3o ser atualizados automaticamente ap\xf3s a aplica\xe7\xe3o do arquivo YAML."}),"\n",(0,r.jsx)(n.h3,{id:"porque-n\xe3o-usamos-o-kubectl-create-agora",children:"Porque n\xe3o usamos o kubectl create agora"}),"\n",(0,r.jsxs)(n.p,{children:["O comando ",(0,r.jsx)(n.code,{children:"kubectl create"})," n\xe3o cria recursos do tipo ReplicaSet e DaemonSet. Para criar um ReplicaSet ou DaemonSet, voc\xea precisa utilizar o comando ",(0,r.jsx)(n.code,{children:"kubectl apply"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl create --help\n# Available Commands:\n#   clusterrole           Create a cluster role\n#   clusterrolebinding    Create a cluster role binding for a particular cluster role\n#   configmap             Create a config map from a local file, directory or literal value\n#   cronjob               Create a cron job with the specified name\n#   deployment            Create a deployment with the specified name\n#   ingress               Create an ingress with the specified name\n#   job                   Create a job with the specified name\n#   namespace             Create a namespace with the specified name\n#   poddisruptionbudget   Create a pod disruption budget with the specified name\n#   priorityclass         Create a priority class with the specified name\n#   quota                 Create a quota with the specified name\n#   role                  Create a role with single rule\n#   rolebinding           Create a role binding for a particular role or cluster role\n#   secret                Create a secret using specified subcommand\n#   service               Create a service using a specified subcommand\n#   serviceaccount        Create a service account with the specified name\n#   token                 Request a service account token\n"})}),"\n",(0,r.jsx)(n.h3,{id:"o-que-s\xe3o-as-probes-no-kubernetes",children:"O que s\xe3o as Probes no Kubernetes?"}),"\n",(0,r.jsx)(n.p,{children:"As Probes s\xe3o mecanismos que o Kubernetes utiliza para verificar a sa\xfade dos containers. Existem tr\xeas tipos de Probes: Liveness Probe, Readiness Probe e StartUp Probe."}),"\n",(0,r.jsx)(n.h3,{id:"liveness-probe",children:"Liveness Probe"}),"\n",(0,r.jsx)(n.p,{children:"A Liveness Probe \xe9 utilizada para verificar se o container est\xe1 em execu\xe7\xe3o. Se o container falhar na Liveness Probe, o Kubernetes ir\xe1 reiniciar o container."}),"\n",(0,r.jsx)(n.h3,{id:"readiness-probe",children:"Readiness Probe"}),"\n",(0,r.jsx)(n.p,{children:"A Readiness Probe \xe9 utilizada para verificar se o container est\xe1 pronto para receber tr\xe1fego. Se o container falhar na Readiness Probe, o Kubernetes ir\xe1 remover o container do servi\xe7o."}),"\n",(0,r.jsx)(n.h3,{id:"startup-probe",children:"StartUp Probe"}),"\n",(0,r.jsx)(n.p,{children:"A StartUp Probe \xe9 utilizada para verificar se o container est\xe1 pronto para receber tr\xe1fego ap\xf3s a inicializa\xe7\xe3o. A StartUp Probe \xe9 utilizada para verificar se o container est\xe1 pronto para receber tr\xe1fego ap\xf3s a inicializa\xe7\xe3o."}),"\n",(0,r.jsx)(n.h3,{id:"exemplo-com-todas-as-probes",children:"Exemplo com todas as Probes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="liveness-probe.yaml"',children:'apiVersion: v1\nkind: Pod\nmetadata:\n  labels:\n    app: liveness-probe\n  name: liveness-probe\nspec:\n  containers:\n    - name: liveness-probe\n      image: nginx\n      livenessProbe: # Liveness Probe\n        httpGet: # Faz uma requisi\xe7\xe3o HTTP GET para o container\n          path: / # Caminho da requisi\xe7\xe3o\n          port: 80 # Porta da requisi\xe7\xe3o\n        # tcpSocket:              # Faz uma requisi\xe7\xe3o TCP para o container\n        #   port: 80              # Porta da requisi\xe7\xe3o\n        initialDelaySeconds: 15 # Tempo para iniciar a verifica\xe7\xe3o\n        periodSeconds: 5 # Intervalo entre as verifica\xe7\xf5es\n        timeoutSeconds: 5 # Tempo limite para a verifica\xe7\xe3o\n        failureThreshold: 3 # N\xfamero de falhas para reiniciar o container\n      readinessProbe: # Readiness Probe\n        exec: # Executa um comando no container\n          command: # Comando a ser executado\n            - curl\n            - -f\n            - http://localhost:80\n        initialDelaySeconds: 15 # Tempo para iniciar a verifica\xe7\xe3o\n        periodSeconds: 5 # Intervalo entre as verifica\xe7\xf5es\n        timeoutSeconds: 5 # Tempo limite para a verifica\xe7\xe3o\n        failureThreshold: 3 # N\xfamero de falhas para remover o container do servi\xe7o\n      startupProbe: # StartUp Probe\n        tcpSocket: # Faz uma requisi\xe7\xe3o TCP para o container\n          port: 80 # Porta da requisi\xe7\xe3o\n        initialDelaySeconds: 15 # Tempo para iniciar a verifica\xe7\xe3o\n      resources:\n        limits:\n          memory: "128Mi"\n          cpu: "500m"\n        requests:\n          memory: "64Mi"\n          cpu: "250m"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"desafio",children:"Desafio"}),"\n",(0,r.jsx)(n.h3,{id:"objetivos",children:"Objetivos"}),"\n",(0,r.jsx)(n.p,{children:"Criar o deployment de 3 aplica\xe7\xf5es diferentes, contendo limites de recursos de CPU e mem\xf3ria, estrar\xe9gia de atualiza\xe7\xe3o e a configura\xe7\xe3o de probes."}),"\n",(0,r.jsx)(n.h3,{id:"solu\xe7\xe3o",children:"Solu\xe7\xe3o"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="deployments.yaml"',children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: nginx-deployment\n  name: nginx-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: nginx-deployment\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        app: nginx-deployment\n    spec:\n      containers:\n        - name: nginx\n          image: nginx:latest\n          resources:\n            limits:\n              memory: "128Mi"\n              cpu: "500m"\n            requests:\n              memory: "64Mi"\n              cpu: "250m"\n          livenessProbe:\n            httpGet:\n              path: /\n              port: 80\n            initialDelaySeconds: 15\n            periodSeconds: 5\n            timeoutSeconds: 5\n            failureThreshold: 3\n          readinessProbe:\n            httpGet:\n              path: /\n              port: 80\n            initialDelaySeconds: 15\n            periodSeconds: 5\n            timeoutSeconds: 5\n            failureThreshold: 3\n          startupProbe:\n            httpGet:\n              path: /\n              port: 80\n            initialDelaySeconds: 15\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: apache-deployment\n  name: apache-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: apache-deployment\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        app: apache-deployment\n    spec:\n      containers:\n        - name: apache\n          image: httpd:latest\n          resources:\n            limits:\n              memory: "128Mi"\n              cpu: "500m"\n            requests:\n              memory: "64Mi"\n              cpu: "250m"\n          livenessProbe:\n            httpGet:\n              path: /\n              port: 80\n            initialDelaySeconds: 15\n            periodSeconds: 5\n            timeoutSeconds: 5\n            failureThreshold: 3\n          readinessProbe:\n            httpGet:\n              path: /\n              port: 80\n            initialDelaySeconds: 15\n            periodSeconds: 5\n            timeoutSeconds: 5\n            failureThreshold: 3\n          startupProbe:\n            httpGet:\n              path: /\n              port: 80\n            initialDelaySeconds: 15\n---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: tomcat-deployment\n  name: tomcat-deployment\nspec:\n  replicas: 3\n  selector:\n    matchLabels:\n      app: tomcat-deployment\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 1\n      maxUnavailable: 1\n  template:\n    metadata:\n      labels:\n        app: tomcat-deployment\n    spec:\n      containers:\n        - name: tomcat\n          image: tomcat:latest\n          resources:\n            limits:\n              memory: "128Mi"\n              cpu: "500m"\n            requests:\n              memory: "64Mi"\n              cpu: "250m"\n          livenessProbe:\n            tcpSocket:\n              port: 8080\n            initialDelaySeconds: 15\n            periodSeconds: 5\n            timeoutSeconds: 5\n            failureThreshold: 3\n          readinessProbe:\n            tcpSocket:\n              port: 8080\n            initialDelaySeconds: 15\n            periodSeconds: 5\n            timeoutSeconds: 5\n            failureThreshold: 3\n          startupProbe:\n            tcpSocket:\n              port: 8080\n            initialDelaySeconds: 15\n'})}),"\n",(0,r.jsx)(n.p,{children:"E rodar o comando:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f deployments.yaml\n"})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},4243:(e,n,a)=>{a.d(n,{A:()=>i});a(6540);var o=a(8532),r=a(4848);function i(e){let{children:n,fontSize:a="15px",color:i="#999",bgColor:s=null,bgColorDark:t=null}=e;const{colorMode:l}=(0,o.G)(),c={textAlign:"center",fontSize:a,color:i,backgroundColor:"dark"===l?t:s};return(0,r.jsx)("div",{style:c,children:n})}},8453:(e,n,a)=>{a.d(n,{R:()=>s,x:()=>t});var o=a(6540);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);
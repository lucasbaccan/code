"use strict";(self.webpackChunkcode=self.webpackChunkcode||[]).push([[447],{5804:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>n,contentTitle:()=>u,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"site_docusaurus/github_actions","title":"GitHub Actions","description":"Durante o desenvolvimento de um projeto, \xe9 comum que seja necess\xe1rio executar tarefas repetitivas, como por exemplo, executar testes unit\xe1rios, fazer o build do projeto, fazer o deploy do projeto, etc. Quando pensamos em um projeto pequeno ou com poucas modifica\xe7\xf5es, essas tarefas podem ser executadas manualmente, mas quando o projeto cresce e passa a ter v\xe1rias modifica\xe7\xf5es, essas tarefas podem ser executadas de forma autom\xe1tica, atrav\xe9s de um processo de integra\xe7\xe3o cont\xednua (CI).","source":"@site/docs/tutorial/site_docusaurus/06_github_actions.md","sourceDirName":"site_docusaurus","slug":"/site_docusaurus/github_actions","permalink":"/tutorial/site_docusaurus/github_actions","draft":false,"unlisted":false,"editUrl":"https://github.com/lucasbaccan/code/tree/master/docs/tutorial/site_docusaurus/06_github_actions.md","tags":[],"version":"current","lastUpdatedBy":"Lucas Elias Baccan","lastUpdatedAt":1664549134000,"sidebarPosition":6,"frontMatter":{"id":"github_actions","title":"GitHub Actions"},"sidebar":"docs","previous":{"title":"Criando p\xe1ginas","permalink":"/tutorial/site_docusaurus/criando_paginas"},"next":{"title":"SQL","permalink":"/tutorial/sql/"}}');var a=t(4848),r=t(8453);const i={id:"github_actions",title:"GitHub Actions"},u=void 0,n={},c=[{value:"GitHub Actions",id:"github-actions",level:2},{value:"Meus workflows",id:"meus-workflows",level:2},{value:"Build and Deploy",id:"build-and-deploy",level:3},{value:"Pull Request - Deploy to Surge",id:"pull-request---deploy-to-surge",level:3},{value:"Pull Request - Close",id:"pull-request---close",level:3},{value:"Gource",id:"gource",level:3}];function d(e){const o={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.p,{children:"Durante o desenvolvimento de um projeto, \xe9 comum que seja necess\xe1rio executar tarefas repetitivas, como por exemplo, executar testes unit\xe1rios, fazer o build do projeto, fazer o deploy do projeto, etc. Quando pensamos em um projeto pequeno ou com poucas modifica\xe7\xf5es, essas tarefas podem ser executadas manualmente, mas quando o projeto cresce e passa a ter v\xe1rias modifica\xe7\xf5es, essas tarefas podem ser executadas de forma autom\xe1tica, atrav\xe9s de um processo de integra\xe7\xe3o cont\xednua (CI)."}),"\n",(0,a.jsx)(o.h2,{id:"github-actions",children:"GitHub Actions"}),"\n",(0,a.jsxs)(o.p,{children:["Como eu utilizo o ",(0,a.jsx)(o.a,{href:"https://github.com",children:"GitHub"})," para salvar o c\xf3digo do projeto, eles disponibilizam uma ferramenta chamada GitHub Actions que permite executar os workflows no pr\xf3prio GitHub."]}),"\n",(0,a.jsxs)(o.p,{children:["O ",(0,a.jsx)(o.a,{href:"https://github.com/features/actions",children:"GitHub Actions"})," \xe9 uma ferramenta de automa\xe7\xe3o de processos que permite executar tarefas repetitivas de forma automatizada, atrav\xe9s de um arquivo de configura\xe7\xe3o chamado workflow. O workflow \xe9 um arquivo de configura\xe7\xe3o que cont\xe9m as instru\xe7\xf5es para executar as tarefas, e \xe9 escrito em YAML. O workflow pode ser executado em um determinado evento, como por exemplo, quando um ",(0,a.jsx)(o.em,{children:"pull request"})," \xe9 criado, quando um ",(0,a.jsx)(o.em,{children:"commit"})," \xe9 feito, quando um release \xe9 criada, etc."]}),"\n",(0,a.jsx)(o.h2,{id:"meus-workflows",children:"Meus workflows"}),"\n",(0,a.jsx)(o.p,{children:"Esse projeto utiliza quatro workflows, que facilitam no dia a dia do desenvolvimento do projeto."}),"\n",(0,a.jsx)(o.h3,{id:"build-and-deploy",children:"Build and Deploy"}),"\n",(0,a.jsxs)(o.p,{children:["Esse workflow \xe9 executado quando um commit \xe9 feito na branch ",(0,a.jsx)(o.code,{children:"main"})," ou ",(0,a.jsx)(o.code,{children:"master"}),". Ele vai executar o comando ",(0,a.jsx)(o.code,{children:"npm run build"})," e vai fazer o deploy do projeto no GitHub Pages."]}),"\n",(0,a.jsx)(o.h3,{id:"pull-request---deploy-to-surge",children:"Pull Request - Deploy to Surge"}),"\n",(0,a.jsxs)(o.p,{children:["Esse workflow \xe9 executado quando um ",(0,a.jsx)(o.em,{children:"pull request"})," \xe9 criado. Ele vai executar o comando ",(0,a.jsx)(o.code,{children:"npm run build"})," e vai fazer o deploy do projeto no ",(0,a.jsx)(o.a,{href:"https://surge.sh",children:"Surge"}),". Eu utilizo o Surge para subir o site e poder visualizar as altera\xe7\xf5es que foram feitas no ",(0,a.jsx)(o.em,{children:"pull request"}),"."]}),"\n",(0,a.jsx)(o.h3,{id:"pull-request---close",children:"Pull Request - Close"}),"\n",(0,a.jsxs)(o.p,{children:["Esse workflow \xe9 executado quando um ",(0,a.jsx)(o.em,{children:"pull request"})," \xe9 fechado. Ele vai deletar o site que foi feito o deploy no Surge."]}),"\n",(0,a.jsx)(o.h3,{id:"gource",children:"Gource"}),"\n",(0,a.jsxs)(o.p,{children:["Esse workflow \xe9 executado quando um commit \xe9 feito na branch ",(0,a.jsx)(o.code,{children:"main"})," ou ",(0,a.jsx)(o.code,{children:"master"}),". Ele vai executar o utilit\xe1rio ",(0,a.jsx)(o.a,{href:"https://gource.io",children:"Gource"})," e vai gerar um v\xeddeo com as altera\xe7\xf5es que foram feitas no projeto. O v\xeddeo \xe9 gerado no formato ",(0,a.jsx)(o.code,{children:".mp4"})," e \xe9 salvo no reposit\xf3rio do projeto no branch ",(0,a.jsx)(o.code,{children:"gource"}),"."]})]})}function l(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>i,x:()=>u});var s=t(6540);const a={},r=s.createContext(a);function i(e){const o=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function u(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(r.Provider,{value:o},e.children)}}}]);
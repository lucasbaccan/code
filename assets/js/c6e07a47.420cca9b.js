"use strict";(self.webpackChunkcode=self.webpackChunkcode||[]).push([[7104],{4854:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"pick-2024/kubernetes/day11/index","title":"Day 11","description":"Sum\xe1rio","source":"@site/docs/cursos/pick-2024/kubernetes/day11/index.md","sourceDirName":"pick-2024/kubernetes/day11","slug":"/cursos/pick-2024/kubernetes/day11","permalink":"/cursos/cursos/pick-2024/kubernetes/day11","draft":false,"unlisted":false,"editUrl":"https://github.com/lucasbaccan/code/tree/master/docs/cursos/pick-2024/kubernetes/day11/index.md","tags":[],"version":"current","lastUpdatedBy":"Lucas Elias Baccan","lastUpdatedAt":1732372446000,"frontMatter":{"id":"index","title":"Day 11","hide_title":false,"hide_table_of_contents":false,"sidebar_label":"Day 11","slug":"/cursos/pick-2024/kubernetes/day11"},"sidebar":"docs","previous":{"title":"Day 10","permalink":"/cursos/pick-2024/kubernetes/day10/"}}');var r=s(4848),a=s(8453);s(4243);const i={id:"index",title:"Day 11",hide_title:!1,hide_table_of_contents:!1,sidebar_label:"Day 11",slug:"/cursos/pick-2024/kubernetes/day11"},t=void 0,l={},d=[{value:"Sum\xe1rio",id:"sum\xe1rio",level:2},{value:"Dia 11",id:"dia-11",level:2},{value:"O que \xe9 o Ingress?",id:"o-que-\xe9-o-ingress",level:3},{value:"Configurando o Kind para suportar o Ingress",id:"configurando-o-kind-para-suportar-o-ingress",level:3},{value:"Instalando o Ingress Nginx Controller",id:"instalando-o-ingress-nginx-controller",level:3},{value:"Deploy da nossa aplica\xe7\xe3o que iremos usar de exemplo",id:"deploy-da-nossa-aplica\xe7\xe3o-que-iremos-usar-de-exemplo",level:3},{value:"Criando a nossa primeira regra de Ingress",id:"criando-a-nossa-primeira-regra-de-ingress",level:3},{value:"Corrigindo o Ingress",id:"corrigindo-o-ingress",level:3},{value:"Ingress para a nossa App em Flask e usando Redis",id:"ingress-para-a-nossa-app-em-flask-e-usando-redis",level:3},{value:"Criando m\xfaltiplos Ingresses no mesmo Ingress Controller",id:"criando-m\xfaltiplos-ingresses-no-mesmo-ingress-controller",level:3},{value:"Instalando um cluster EKS para os nossos testes com Ingress",id:"instalando-um-cluster-eks-para-os-nossos-testes-com-ingress",level:3},{value:"Entendendo os Contexts do Kubernetes para gerenciar v\xe1rios clusters",id:"entendendo-os-contexts-do-kubernetes-para-gerenciar-v\xe1rios-clusters",level:3},{value:"Instalando o Ingress Nginx Controller no EKS",id:"instalando-o-ingress-nginx-controller-no-eks",level:3},{value:"Conhecendo o ingressClassName e configurando um novo Ingress",id:"conhecendo-o-ingressclassname-e-configurando-um-novo-ingress",level:3},{value:"Configurando um dom\xednio v\xe1lido para o nosso Ingress no EKS",id:"configurando-um-dom\xednio-v\xe1lido-para-o-nosso-ingress-no-eks",level:3}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"sum\xe1rio",children:"Sum\xe1rio"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Intro Day-11 - 01:58"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 Intro Day-11"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 O que \xe9 o Ingress no Kubernetes - 05:07"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 O que \xe9 o Ingress?"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Configurando o Kind para suportar o Ingress - 10:54"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 Configurando o Kind para suportar o Ingress"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Instalando o Ingress Nginx Controller - 11:53"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 Instalando o Ingress Nginx Controller"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Deploy da nossa aplica\xe7\xe3o que iremos usar de exemplo - 12:43"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 Arquivos utilizados para fazer o deploy da App"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Criando a nossa primeira regra de Ingress - 11:41"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcd6 Criando a nossa primeira regra"}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udcdd O que est\xe1 acontecendo com o nosso Ingress? - 1 quest\xf5es"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Precisamos entender melhor como o Ingress funciona - 07:09"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Entendendo as alternativas que temos e como resolver - 10:05"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Configurando um Ingress para a nossa App em Flask e usando Redis - 04:49"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Criando m\xfaltiplos Ingresses no mesmo Ingress Controller - 09:35"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Instalando um cluster EKS para os nossos testes com Ingress - 03:42"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Entendendo os Contexts do Kubernetes para gerenciar v\xe1rios clusters - 06:14"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Instalando o Ingress Nginx Controller no EKS - 09:48"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Conhecendo o ingressClassName e configurando um novo Ingress - 08:25"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Configurando um dom\xednio v\xe1lido para o nosso Ingress no EKS - 07:51"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udfa5 Encerramento Day-11 - 02:45"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udf99\ufe0f Sess\xe3o ao vivo PICK2023 com Ricardo Katz - Mantenedor do Ingress Nginx Controller - 01:47:50"}),"\n",(0,r.jsx)(n.li,{children:"\ud83c\udf99\ufe0f Mentoria ao vivo - Devops com Intelig\xeancia Emocional, Excelente Combina\xe7\xe3o! - Andr\xe9 Brand\xe3o - 01:09:27"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Legenda"}),(0,r.jsx)(n.br,{}),"\n","\ud83c\udfa5 - Aula gravada\n\ud83c\udf99\ufe0f - Aula ao Vivo\n\ud83d\udcd6 - Material complementar\n\ud83d\udcdd - Atividade"]}),"\n",(0,r.jsx)(n.h2,{id:"dia-11",children:"Dia 11"}),"\n",(0,r.jsx)(n.p,{children:"No dia 11, vamos falar sobre Ingress no Kubernetes. O Ingress \xe9 um recurso que permite a exposi\xe7\xe3o de servi\xe7os HTTP e HTTPS fora do cluster Kubernetes. Com ele, \xe9 poss\xedvel configurar regras de roteamento para diferentes servi\xe7os, al\xe9m de permitir a configura\xe7\xe3o de TLS para comunica\xe7\xe3o segura."}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Material complementar: ",(0,r.jsx)(n.a,{href:"https://livro.descomplicandokubernetes.com.br/pt/day-9/",children:"Leitura complementar do Day-9"})]})}),"\n",(0,r.jsx)(n.h3,{id:"o-que-\xe9-o-ingress",children:"O que \xe9 o Ingress?"}),"\n",(0,r.jsx)(n.p,{children:"O Ingress \xe9 um recurso do Kubernetes que permite a exposi\xe7\xe3o de servi\xe7os HTTP e HTTPS fora do cluster Kubernetes. Com ele, \xe9 poss\xedvel configurar regras de roteamento para diferentes servi\xe7os, al\xe9m de permitir a configura\xe7\xe3o de TLS para comunica\xe7\xe3o segura."}),"\n",(0,r.jsx)(n.p,{children:"A diferen\xe7a entre o Ingress e o Service \xe9 que o Ingress \xe9 um recurso de camada 7, enquanto o Service \xe9 um recurso de camada 4. Isso significa que o Ingress opera no n\xedvel de aplica\xe7\xe3o, permitindo a configura\xe7\xe3o de regras de roteamento baseadas em URL, cabe\xe7alhos, etc."}),"\n",(0,r.jsx)(n.p,{children:"Voc\xea precisa ter um Service do tipo NodePort ou LoadBalancer para que o Ingress funcione corretamente."}),"\n",(0,r.jsx)(n.p,{children:"As principais ferramentas de Ingress dispon\xedveis s\xe3o o Nginx Ingress Controller, o Traefik, o HAProxy e o Istio."}),"\n",(0,r.jsx)(n.p,{children:"Dentre as principais funcionalidades do Ingress, podemos destacar:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Controlador de Ingress"}),": \xc9 a implementa\xe7\xe3o real que satisfaz um recurso Ingress. Ele pode ser implementado atrav\xe9s de v\xe1rias solu\xe7\xf5es de proxy reverso, como NGINX ou HAProxy."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Regras de Roteamento"}),": Definidas em um objeto YAML, essas regras determinam como as requisi\xe7\xf5es externas devem ser encaminhadas aos servi\xe7os internos."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Backend Padr\xe3o"}),": Um servi\xe7o de fallback para onde as requisi\xe7\xf5es s\xe3o encaminhadas se nenhuma regra de roteamento for correspondida."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Balanceamento de Carga"}),": Distribui\xe7\xe3o autom\xe1tica de tr\xe1fego entre m\xfaltiplos pods de um servi\xe7o."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Termina\xe7\xe3o SSL/TLS"}),": O Ingress permite a configura\xe7\xe3o de certificados SSL/TLS para a termina\xe7\xe3o de criptografia no ponto de entrada do cluster."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Anexos de Recurso"}),": Possibilidade de anexar recursos adicionais como ConfigMaps ou Secrets, que podem ser utilizados para configurar comportamentos adicionais como autentica\xe7\xe3o b\xe1sica, listas de controle de acesso etc."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"configurando-o-kind-para-suportar-o-ingress",children:"Configurando o Kind para suportar o Ingress"}),"\n",(0,r.jsx)(n.p,{children:"Para que o Kind suporte o Ingress, \xe9 necess\xe1rio habilitar o recurso de port forwarding. Isso pode ser feito atrav\xe9s do arquivo de configura\xe7\xe3o do Kind, adicionando a seguinte configura\xe7\xe3o:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="kind-config.yaml"',children:'kind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nnodes:\n  - role: control-plane\n    kubeadminConfigPatches:\n      - |\n        kind: InitConfiguration\n        nodeRegistration:\n          kubeletExtraArgs:\n            node-labels: "ingress-ready=true"\n    extraPortMappings:\n      - containerPort: 80\n        hostPort: 80\n        protocol: TCP\n      - containerPort: 443\n        hostPort: 443\n        protocol: TCP\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Rode o comando ",(0,r.jsx)(n.code,{children:"kind create cluster --config kind-config.yaml"})," para criar o cluster Kind com suporte ao Ingress."]}),"\n",(0,r.jsx)(n.admonition,{title:"Observa\xe7\xe3o",type:"note",children:(0,r.jsx)(n.p,{children:"Essa configura\xe7\xe3o s\xf3 \xe9 necess\xe1ria para o Kind. Caso esteja utilizando um cluster gerenciado, como o EKS, GKE ou AKS, o suporte ao Ingress j\xe1 est\xe1 habilitado por padr\xe3o.\nSe estiver utilizando Minikube ou outro ambiente local, verifique a documenta\xe7\xe3o para habilitar o suporte ao Ingress."})}),"\n",(0,r.jsx)(n.h3,{id:"instalando-o-ingress-nginx-controller",children:"Instalando o Ingress Nginx Controller"}),"\n",(0,r.jsxs)(n.p,{children:["O projeto ",(0,r.jsx)(n.a,{href:"https://kubernetes.github.io/ingress-nginx/",children:"Ingress Nginx"})," \xe9 uma implementa\xe7\xe3o do controlador de Ingress baseado no NGINX. Para instal\xe1-lo, execute os seguintes comandos:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Caso esteja utilizando outro ambiente, veja a ",(0,r.jsx)(n.a,{href:"https://kubernetes.github.io/ingress-nginx/deploy/#contents",children:"documenta\xe7\xe3o oficial"})," para instru\xe7\xf5es espec\xedficas."]}),"\n",(0,r.jsx)(n.p,{children:"Verifique se o Ingress Nginx Controller foi instalado corretamente executando o comando:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl wait --namespace ingress-nginx \\\n  --for=condition=ready pod \\\n  --selector=app.kubernetes.io/component=controller \\\n  --timeout=120s\n"})}),"\n",(0,r.jsx)(n.h3,{id:"deploy-da-nossa-aplica\xe7\xe3o-que-iremos-usar-de-exemplo",children:"Deploy da nossa aplica\xe7\xe3o que iremos usar de exemplo"}),"\n",(0,r.jsxs)(n.p,{children:["Vamos utilizar o projeto ",(0,r.jsx)(n.a,{href:"https://github.com/badtuxx/giropops-senhas-labs",children:"Giropops Senhas"})," como exemplo para configurar o Ingress."]}),"\n",(0,r.jsx)(n.p,{children:"Vamos aplicar os arquivos de configura\xe7\xe3o necess\xe1rios para o deploy da aplica\xe7\xe3o:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# App Deployment\nkubectl apply -f https://raw.githubusercontent.com/badtuxx/giropops-senhas-labs/main/giropops-senhas/app-deployment.yaml\n# App Service\nkubectl apply -f https://raw.githubusercontent.com/badtuxx/giropops-senhas-labs/main/giropops-senhas/app-service.yaml\n# Redis Deployment\nkubectl apply -f https://raw.githubusercontent.com/badtuxx/giropops-senhas-labs/main/giropops-senhas/redis-deployment.yaml\n# Redis Service\nkubectl apply -f https://raw.githubusercontent.com/badtuxx/giropops-senhas-labs/main/giropops-senhas/redis-service.yaml\n"})}),"\n",(0,r.jsx)(n.p,{children:"Vamos utilizar o port-forward para acessar a aplica\xe7\xe3o:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl port-forward service/giropops-senhas 5000:5000\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Acesse a aplica\xe7\xe3o em ",(0,r.jsx)(n.a,{href:"http://localhost:5000",children:"http://localhost:5000"})," para verificar se est\xe1 funcionando corretamente."]}),"\n",(0,r.jsx)(n.h3,{id:"criando-a-nossa-primeira-regra-de-ingress",children:"Criando a nossa primeira regra de Ingress"}),"\n",(0,r.jsx)(n.p,{children:"O arquivo de configura\xe7\xe3o do Ingress \xe9 composto por tr\xeas partes: a defini\xe7\xe3o do recurso Ingress, a defini\xe7\xe3o das regras de roteamento e a defini\xe7\xe3o do backend padr\xe3o."}),"\n",(0,r.jsx)(n.p,{children:"Vamos criar o arquivo de configura\xe7\xe3o do Ingress para a nossa aplica\xe7\xe3o:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="giropops-ingress.yaml"',children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: giropops-senhas\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n    - http:\n        paths:\n          - path: /giropops-senhas\n            pathType: Prefix\n            backend:\n              service:\n                name: giropops-senhas\n                port:\n                  number: 5000\n"})}),"\n",(0,r.jsx)(n.p,{children:"Aplique o arquivo de configura\xe7\xe3o do Ingress:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f giropops-ingress.yaml\n"})}),"\n",(0,r.jsx)(n.h3,{id:"corrigindo-o-ingress",children:"Corrigindo o Ingress"}),"\n",(0,r.jsxs)(n.p,{children:["Quando subimos o Ingress anteriormente, ele n\xe3o funcionou como esperado. Isso ocorreu porque o Ingress Controller n\xe3o conseguiu resolver os arquivos de ",(0,r.jsx)(n.code,{children:"/static"})," para a aplica\xe7\xe3o."]}),"\n",(0,r.jsx)(n.p,{children:"Para corrigir esse problema, precisamos adicionar uma configura\xe7\xe3o adicional no arquivo de configura\xe7\xe3o do Ingress:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="giropops-ingress-2.yaml"',children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: giropops-senhas\nspec:\n  rules:\n    - http:\n        paths:\n          - path: /static\n            pathType: Prefix\n            backend:\n              service:\n                name: giropops-senhas\n                port:\n                  number: 5000\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Isso ir\xe1 permitir que o Ingress Controller encaminhe as requisi\xe7\xf5es para o diret\xf3rio ",(0,r.jsx)(n.code,{children:"/static"})," corretamente."]}),"\n",(0,r.jsx)(n.h3,{id:"ingress-para-a-nossa-app-em-flask-e-usando-redis",children:"Ingress para a nossa App em Flask e usando Redis"}),"\n",(0,r.jsx)(n.p,{children:"Vamos criar um Ingress para a nossa aplica\xe7\xe3o em Flask que utiliza o Redis como banco de dados."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="giropops-ingress.yaml"',children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: giropops-senhas\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n    - http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: giropops-senhas\n                port:\n                  number: 5000\n"})}),"\n",(0,r.jsx)(n.p,{children:'Dessa forma, n\xe3o rodamos mais a aplica\xe7\xe3o em um "subdiret\xf3rio" e sim na raiz do dom\xednio.'}),"\n",(0,r.jsx)(n.h3,{id:"criando-m\xfaltiplos-ingresses-no-mesmo-ingress-controller",children:"Criando m\xfaltiplos Ingresses no mesmo Ingress Controller"}),"\n",(0,r.jsxs)(n.p,{children:["\xc9 poss\xedvel criar m\xfaltiplos Ingresses no mesmo Ingress Controller. Para isso, basta criar um arquivo de configura\xe7\xe3o para cada Ingress e aplic\xe1-los no cluster. Mas \xe9 importante de configurar o ",(0,r.jsx)(n.code,{children:"host"})," para cada Ingress, para que o Ingress Controller saiba para qual dom\xednio encaminhar as requisi\xe7\xf5es."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="giropops-ingress-2.yaml"',children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: giropops-senhas\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  rules:\n    - host: giropops-senhas.local\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: giropops-senhas\n                port:\n                  number: 5000\n    - host: giropops-senhas.remoto\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: giropops-senhas\n                port:\n                  number: 5000\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Dessa forma, podemos ter m\xfaltiplos dom\xednios apontando para a mesma aplica\xe7\xe3o ou ter regras diferentes que aponte para o mesmo ",(0,r.jsx)(n.code,{children:"path"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"instalando-um-cluster-eks-para-os-nossos-testes-com-ingress",children:"Instalando um cluster EKS para os nossos testes com Ingress"}),"\n",(0,r.jsxs)(n.p,{children:["Para instalar um cluster EKS, siga os passos descritos na ",(0,r.jsx)(n.a,{href:"https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html",children:"documenta\xe7\xe3o oficial"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Se voc\xea tiver o ",(0,r.jsx)(n.code,{children:"eksctl"})," instalado, pode criar um cluster EKS com o comando:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"eksctl create cluster --name giropops --region us-east-1 --node-type t3.medium --nodes 2 --nodes-min 1 --nodes-max 3 --managed\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Ap\xf3s a instala\xe7\xe3o, configure o ",(0,r.jsx)(n.code,{children:"kubectl"})," para acessar o cluster EKS:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"aws eks --region us-east-1 update-kubeconfig --name giropops\n"})}),"\n",(0,r.jsx)(n.h3,{id:"entendendo-os-contexts-do-kubernetes-para-gerenciar-v\xe1rios-clusters",children:"Entendendo os Contexts do Kubernetes para gerenciar v\xe1rios clusters"}),"\n",(0,r.jsxs)(n.p,{children:["O ",(0,r.jsx)(n.code,{children:"kubectl"})," suporta m\xfaltiplos contextos, que s\xe3o conjuntos de configura\xe7\xf5es que definem o cluster, o usu\xe1rio e o namespace padr\xe3o. Isso permite alternar facilmente entre diferentes clusters e ambientes."]}),"\n",(0,r.jsx)(n.p,{children:"Para listar os contextos dispon\xedveis, execute o comando:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl config get-contexts\n"})}),"\n",(0,r.jsx)(n.p,{children:"Para alterar o contexto padr\xe3o, execute o comando:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl config use-context <context-name>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"instalando-o-ingress-nginx-controller-no-eks",children:"Instalando o Ingress Nginx Controller no EKS"}),"\n",(0,r.jsxs)(n.p,{children:["Para instalar o Ingress Nginx Controller no EKS, siga os passos descritos na ",(0,r.jsx)(n.a,{href:"https://kubernetes.github.io/ingress-nginx/deploy/#aws",children:"documenta\xe7\xe3o oficial"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Um ponto importante \xe9 que at\xe9 o momento, n\xe3o precisamos configurar qual a classe do Ingress Controller que queremos utilizar. Isso ocorre porque o Ingress Nginx Controller \xe9 o controlador padr\xe3o. Mas na AWS, o Ingress Nginx Controller \xe9 instalado com a classe ",(0,r.jsx)(n.code,{children:"alb"}),". Para utilizar o Ingress Nginx Controller, \xe9 necess\xe1rio configurar a classe do Ingress Controller no arquivo de configura\xe7\xe3o do Ingress."]}),"\n",(0,r.jsx)(n.h3,{id:"conhecendo-o-ingressclassname-e-configurando-um-novo-ingress",children:"Conhecendo o ingressClassName e configurando um novo Ingress"}),"\n",(0,r.jsxs)(n.p,{children:["O campo ",(0,r.jsx)(n.code,{children:"ingressClassName"})," foi introduzido no Kubernetes 1.18 e permite especificar a classe do Ingress Controller que deve ser utilizada para satisfazer o recurso Ingress."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="giropops-ingress-3.yaml"',children:"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: giropops-senhas\n  annotations:\n    nginx.ingress.kubernetes.io/rewrite-target: /\nspec:\n  ingressClassName: nginx # Essa \xe9 a classe do Ingress Controller que ser\xe1 utilizada\n  rules:\n  - host: giropops-senhas.local\n    http:\n      paths:\n      ...\n"})}),"\n",(0,r.jsx)(n.p,{children:"Dessa forma, podemos configurar qual Ingress Controller deve ser utilizado para satisfazer o recurso Ingress."}),"\n",(0,r.jsx)(n.h3,{id:"configurando-um-dom\xednio-v\xe1lido-para-o-nosso-ingress-no-eks",children:"Configurando um dom\xednio v\xe1lido para o nosso Ingress no EKS"}),"\n",(0,r.jsx)(n.p,{children:"Para configurar um dom\xednio v\xe1lido para o Ingress no EKS, \xe9 necess\xe1rio criar um registro DNS apontando para o Load Balancer criado pelo Ingress Nginx Controller."}),"\n",(0,r.jsx)(n.p,{children:"Voc\xea pode ver qual o endere\xe7o IP do Load Balancer executando o comando:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"kubectl get svc -n ingress-nginx\n# ou\nkubectl get ingress -A\n"})}),"\n",(0,r.jsx)(n.p,{children:"Ap\xf3s obter o endere\xe7o IP, crie um registro DNS apontando para esse IP."}),"\n",(0,r.jsxs)(n.p,{children:["Vale notar que se no seu ",(0,r.jsx)(n.code,{children:"Ingress"})," voc\xea configurou o campo ",(0,r.jsx)(n.code,{children:"host"}),", o dom\xednio configurado no DNS deve ser o mesmo que o configurado no ",(0,r.jsx)(n.code,{children:"Ingress"}),". Caso contr\xe1rio, o Ingress n\xe3o ir\xe1 funcionar corretamente. Mas se voc\xea n\xe3o configurou o campo ",(0,r.jsx)(n.code,{children:"host"}),", o dom\xednio configurado no DNS pode ser qualquer um, e sua aplica\xe7\xe3o funciona acessando o IP do Load Balancer."]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},4243:(e,n,s)=>{s.d(n,{A:()=>i});var o=s(6540),r=s(8532),a=s(4848);function i(e){let{children:n,fontSize:s="15px",color:i="#999",bgColor:t=null,bgColorDark:l=null}=e;const{colorMode:d}=(0,r.G)(),[c,p]=(0,o.useState)(null);(0,o.useEffect)((()=>{p("dark"===d?l||null:t||null)}),[d]);const u={textAlign:"center",fontSize:s,color:i,backgroundColor:c};return(0,a.jsx)("div",{style:u,children:n})}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>t});var o=s(6540);const r={},a=o.createContext(r);function i(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);